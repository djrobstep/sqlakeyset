version: 2
jobs:
  build:
    working_directory: ~/circleci
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:12.12
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: cimg/mariadb:10.11
        environment:
          MYSQL_DATABASE: circleci
          MYSQL_USER: circleci
          MYSQL_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    environment:
      SQLALCHEMY_SILENCE_UBER_WARNING: 1  # Silence sqlachemy 2.0 warnings
    steps:
      - checkout
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "pyproject.toml" }}
      - run: sudo apt-get update
      - run: sudo apt-get install -y postgresql-client
      - run: sudo apt-get install -y default-mysql-client
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: create postgres user
          command: psql postgresql://@localhost/circleci -c 'create role postgres'
      - run:
          name: create mysql user
          command: mysql circleci -u root -h 127.0.0.1 -e "create user 'circleci'@'127.0.0.1'; grant all privileges on *.* to 'circleci'@'127.0.0.1' identified by '';"
      - run:
          command: |
            python3 -m venv ~/.venv
            . ~/.venv/bin/activate

            poetry config virtualenvs.create false
            poetry install
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "pyproject.toml" }}
          paths:
            - "~/.venv"
      - run:
          name: Check formatting
          command: |
            . ~/.venv/bin/activate
            make lint
      - run:
          name: Test with SQLAlchemy 1.3
          command: |
            . ~/.venv/bin/activate
            pip install 'sqlalchemy>=1.3,<1.4'
            make test
      - run:
          name: Test with SQLAlchemy 1.4
          command: |
            . ~/.venv/bin/activate
            # sqla14-compatible sqlbag isn't on PyPI yet
            pip install --upgrade sqlalchemy~=1.4 "git+https://github.com/djrobstep/sqlbag.git@f4759318710ef33dc041710a6ff38f03d3c39b56"
            make test
      - store_test_results:
          path: test-reports

  publish:
    working_directory: ~/circleci
    docker:
      - image: circleci/python:3.8.2
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install poetry, deps
          command: |
            sudo pip3 install poetry>=1.0.0
            poetry config virtualenvs.create false
            python3 -m venv ~/.venv
            . ~/.venv/bin/activate
            poetry install
      - run:
          name: Bump version, build, install
          command: |
            . ~/.venv/bin/activate
            python deploy/vbump.py
            poetry build
            poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD


workflows:
  version: 2
  build-then-publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
